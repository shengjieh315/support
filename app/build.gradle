apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.fire.support"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        // v8 renderscript 库
        // 此库增加了对 RenderScript 计算框架的支持。这些 API 包含在 android.support.v8.renderscript 软件包中。
        // 您应该注意，在应用中添加这些 API 的步骤与添加其他支持库 API 大不相同。
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("../app/supportup.jks")
            storePassword "S_h369749417"
            keyAlias "supportup"
            keyPassword "S_h369749417"
            // 如果要支持最新版的系统 Android 7.0
            // 这一行必须加，否则安装时会提示没有签名
            // 作用是只使用旧版签名，禁用V2版签名模式
            v2SigningEnabled true
        }

        release {
            storeFile file("../app/supportup.jks")
            storePassword "S_h369749417"
            keyAlias "supportup"
            keyPassword "S_h369749417"
            // 如果要支持最新版的系统 Android 7.0
            // 这一行必须加，否则安装时会提示没有签名
            // 作用是只使用旧版签名，禁用V2版签名模式
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            debuggable true
            minifyEnabled true //启用Proguard
            shrinkResources true //是否清理无用资源,依赖于minifyEnabled
            zipAlignEnabled true //是否启用zipAlign压缩
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${getGitBranch()}_${defaultConfig.applicationId}_${defaultConfig.versionCode}_${defaultConfig.versionName}.apk"
                }
            }
        }
        debug {
            debuggable true
            minifyEnabled false  //不启用Proguard
            shrinkResources false //是否清理无用资源,依赖于minifyEnabled
            zipAlignEnabled false //是否启用zipAlign压缩
            signingConfig signingConfigs.debug
        }
    }

    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }



}


/**
 * 获取Git 分支名
 */
def getGitBranch() {
    return 'git symbolic-ref --short -q HEAD'.execute().text.trim()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha03'
    implementation 'com.canyinghao:canadapter:1.3.1'
    implementation 'com.github.RRatChet:Compress:0.0.1'
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'com.github.Raizlabs.DBFlow:dbflow-core:4.2.4'
    implementation 'com.github.Raizlabs.DBFlow:dbflow:4.2.4'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.facebook.fresco:fresco:2.2.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'



}
